apiVersion: pulumi.com/v1
kind: Stack
metadata:
  name: {{ .Values.pulumi.stack.name }}
  namespace: {{ .Values.global.namespace.name }}
  labels:
    {{- include "pulumi-operator-aws.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  # The stack name in format: organization/project/stack
  stack: "{{ .Values.pulumi.stack.name }}"
  
  # Use local backend for state storage
  {{- if .Values.pulumi.backend.useLocal }}
  backend: "file:///share/backend"
  {{- end }}
  
  # Service account for the workspace pod
  serviceAccountName: {{ .Values.pulumi.stack.serviceAccountName | quote }}
  
  {{- if .Values.pulumi.stack.git.enabled }}
  # Git repository containing the Pulumi program
  projectRepo: {{ .Values.pulumi.stack.git.repo | quote }}
  repoDir: {{ .Values.pulumi.stack.git.repoDir | quote }}
  branch: {{ .Values.pulumi.stack.git.branch | quote }}
  {{- end }}
  
  {{- if .Values.pulumi.stack.useConfigMap }}
  # Mount ConfigMap files in the workspace pod
  workspaceTemplate:
    spec:
      image: {{ .Values.pulumi.image | default "pulumi/pulumi-nodejs:latest" }}
      podTemplate:
        spec:
          initContainers:
            - name: copy-program
              image: busybox:latest
              command: ["sh", "-c", "cp -rL /program-files/* /workspace/"]
              volumeMounts:
                - name: program-files
                  mountPath: /program-files
                - name: workspace-storage
                  mountPath: /workspace
          volumes:
            - name: program-files
              configMap:
                name: {{ .Values.configMap.name }}
            - name: workspace-storage
              emptyDir: {}
            {{- if .Values.pulumi.backend.useLocal }}
            - name: backend-storage
              {{- if .Values.pulumi.backend.persistence.enabled }}
              persistentVolumeClaim:
                claimName: {{ include "pulumi-operator-aws.fullname" . }}-backend-storage
              {{- else }}
              emptyDir: {}
              {{- end }}
            {{- end }}
          containers:
            - name: pulumi
              volumeMounts:
                - name: workspace-storage
                  mountPath: /share/workspace
                {{- if .Values.pulumi.backend.useLocal }}
                - name: backend-storage
                  mountPath: /share/backend
                {{- end }}
  {{- end }}
  
  # Environment variables for AWS and optionally Pulumi Cloud
  envRefs:
    AWS_ACCESS_KEY_ID:
      type: Secret
      secret:
        name: {{ .Values.aws.credentials.secretName }}
        key: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      type: Secret
      secret:
        name: {{ .Values.aws.credentials.secretName }}
        key: AWS_SECRET_ACCESS_KEY
    AWS_REGION:
      type: Secret
      secret:
        name: {{ .Values.aws.credentials.secretName }}
        key: AWS_REGION
    {{- if not .Values.pulumi.backend.useLocal }}
    PULUMI_ACCESS_TOKEN:
      type: Secret
      secret:
        name: {{ .Values.pulumi.accessToken.secretName }}
        key: accessToken
    {{- else }}
    PULUMI_CONFIG_PASSPHRASE:
      type: Literal
      literal:
        value: {{ .Values.pulumi.backend.passphrase | default "local-backend-passphrase" | quote }}
    {{- end }}
  
  # Configuration for the Pulumi program
  config:
    aws:region: {{ .Values.aws.region }}
    projectName: {{ .Values.project.name }}
    environment: {{ .Values.project.environment }}
    bucketName: {{ .Values.project.bucketName }}
  
  # Clean up AWS resources when the Stack is deleted
  destroyOnFinalize: {{ .Values.pulumi.stack.destroyOnFinalize }}
  
  # Refresh the stack every X seconds to check for changes
  resyncFrequencySeconds: {{ .Values.pulumi.stack.resyncFrequencySeconds }}
